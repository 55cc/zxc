# This is a basic workflow to help you get started with Actions

name: Clone and Pkg

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: EEE
        run: |
          sudo apt-get update
          sudo apt-get install nodejs
          sudo npm i -g npm
          sudo npm i -g n
          sudo n 21
          sudo npm i -g pkg &
          git clone https://github.com/google/zx.git &
          wait
          cd zx
          ls
          npm ci 
          npm run build
          pwd
          rm -rf package.json  package-lock.json 
          
      - name: PKG
        run: |
          pwd
          tree -L 2
          cd ./zx/build/
          echo '{"name": "zx",  "version": "7.2.3",  "description": "A tool for writing better scripts" ,"type": "module"}' > package.json
          cat  package.json
          # sed -i '1d' cli.js
          sed -i "s/'use strict'/&;var navigator={};/" ./cli.js
          sed -i "s/\.\./\./g" cli.js
          cat cli.js
          
          pkg -t node16-linux-x64 cli.js
          # pkg index.js
          # chmod +x zx zxc || echo "0"
          # ./zx -h || echo "1"
          # ./zxc -h || echo "2"
          chmod +x cli-linux
          ./cli-linux -h || echo "1"
          ls
          cd ../
          
          mkdir -p ~/download/
          cp -r ./build/ ~/download/
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: zxc
          path: ~/download/
          retention-days: 5
